PROGRAM       : MACRO_USE* STAT*

STAT          : RETURN or
                DECL or
                IF or
                ASSIGN or
                FUNC or
                COMMENT or
                FOR or
                ASM or
                MACRO or
                MACRO_REPEAT or
                USE or
                EXPR;

RETURN        : return EXPR;

DECL          : decl id = EXPR;

ASSIGN        : [@] id = EXPR;

COMMENT       : // .*

FOR           : for DECL EXPR; ASSIGN { STAT* }

CALL          : id ( EXPR )

ASM           : `.*`

USE           : use <path>.id;

MACRO_USE     : #USE;

MACRO         : mac id ( ## MACRO_ARG* ## ) { STAT* }

MACRO_CALL    : id # ( .* )

MACRO_REPEAT  : # ( STAT* ) #

MACRO_ARG     : # token id # or
                token or
                # ( ## MACRO_ARG* ## token int int ) #

EXPR          : OP or
                CALL or
                int or
                str or
                [&] id or
                asm or
                # id or
                MACRO_CALL

OP            : EXPR || EXPR or     prec = 0
                EXPR && EXPR or     prec = 0
                EXPR == EXPR or     prec = 1
                EXPR + EXPR or      prec = 2
                EXPR - EXPR or      prec = 2
                EXPR * EXPR or      prec = 3
                EXPR / EXPR or      prec = 3
                EXPR % EXPR or      prec = 3
                @ EXPR              prec = 4
                ! EXPR              prec = 4
                ( EXPR )            prec = 5

IF            : if EXPR { STAT* }

FUNC          : func id ( id ) { STAT* }
